---
- name: Get running container
  community.docker.docker_host_info:
    docker_host: "unix:///run/user/1500/docker.sock"
    containers: yes
    containers_filters:
      name: web-app
  register: containers_info

- name: Stop running container
  community.docker.docker_container:
    docker_host: "unix:///run/user/1500/docker.sock"
    name: "{{ item }}"
    state: stopped
  loop: "{{ containers_info.containers | map(attribute='Id') | list }}"
  when: containers_info.containers | length > 0

- name: Remove Stopped docker containers
  ansible.builtin.shell: |
    docker rm web-app;
  when: containers_info.containers | length > 0

- name: Get old images
  community.docker.docker_host_info:
    docker_host: "unix:///run/user/1500/docker.sock"
    images: true
    images_filters:
      reference: "ghcr.io/lostops-stg5/lostops-app"
  register: images_info

- name: Deleting old images
  community.docker.docker_image_remove:
    docker_host: "unix:///run/user/1500/docker.sock"
    name: "{{ item }}"
    force: true
  loop: "{{ images_info.images | map(attribute='Id') | list }}"
  when: images_info.images | length > 0

- name: Login to docker repository
  community.docker.docker_login:
    docker_host: "unix:///run/user/1500/docker.sock"
    registry_url: "https://ghcr.io/lostops-stg5"
    password: "{{ DOCKERHUB_PASSWORD }}"
    username: "{{ DOCKERHUB_USERNAME }}"

- name: Pulling & running this new image
  community.docker.docker_container:
    docker_host: "unix:///run/user/1500/docker.sock"
    name: web-app
    image: "ghcr.io/lostops-stg5/lostops-app:{{ APP_VERSION }}"
    state: started
    restart_policy: "always"
    recreate: true
    pull: true
    networks:
      - name: traefik_network
    labels:
      traefik.enable: "true"
      traefik.http.routers.web-app.entrypoints: "websecure"
      traefik.http.routers.web-app.rule: "Host(`app.lostops.notmuji.com`)"
    ports:
      - "80"
      - "443"
